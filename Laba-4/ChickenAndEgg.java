
public class ChickenEggDebate {

    public static void main(String[] args) {
        System.out.println("=== –°–ü–û–†: –ß–¢–û –ü–û–Ø–í–ò–õ–û–°–¨ –†–ê–ù–¨–®–ï? ===\n");

        // –°–æ–∑–¥–∞–µ–º –¥–≤–∞ –ø–æ—Ç–æ–∫–∞
        Thread chickenThread = new Thread(new ChickenTask(), "–ö—É—Ä–∏—Ü–∞");
        Thread eggThread = new Thread(new EggTask(), "–Ø–π—Ü–æ");

        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫–∏
        chickenThread.start();
        eggThread.start();

        // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–µ—Ç–æ–¥–∞ isAlive()
        System.out.println("\n=== –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø –ü–û–¢–û–ö–û–í ===");
        System.out.println("–ü–æ—Ç–æ–∫ –ö—É—Ä–∏—Ü–∞ –∞–∫—Ç–∏–≤–µ–Ω: " + chickenThread.isAlive());
        System.out.println("–ü–æ—Ç–æ–∫ –Ø–π—Ü–æ –∞–∫—Ç–∏–≤–µ–Ω: " + eggThread.isAlive());

        // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤ —Å –ø–æ–º–æ—â—å—é join()
        try {
            System.out.println("\n=== –û–ñ–ò–î–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–ò–Ø –ü–û–¢–û–ö–û–í ===");

            // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞ –ö—É—Ä–∏—Ü–∞
            chickenThread.join();
            System.out.println("–ü–æ—Ç–æ–∫ –ö—É—Ä–∏—Ü–∞ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É");
            System.out.println("–ü–æ—Ç–æ–∫ –ö—É—Ä–∏—Ü–∞ –∞–∫—Ç–∏–≤–µ–Ω: " + chickenThread.isAlive());

            // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞ –Ø–π—Ü–æ
            eggThread.join();
            System.out.println("–ü–æ—Ç–æ–∫ –Ø–π—Ü–æ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É");
            System.out.println("–ü–æ—Ç–æ–∫ –Ø–π—Ü–æ –∞–∫—Ç–∏–≤–µ–Ω: " + eggThread.isAlive());

        } catch (InterruptedException e) {
            System.out.println("–û–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ!");
        }

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è —Å–ø–æ—Ä–∞
        determineWinner();
    }

    /**
     * –ó–∞–¥–∞—á–∞ –¥–ª—è –ø–æ—Ç–æ–∫–∞ "–ö—É—Ä–∏—Ü–∞"
     */
    static class ChickenTask implements Runnable {
        public void run() {
            try {
                // –ö—É—Ä–∏—Ü–∞ "–¥—É–º–∞–µ—Ç" 1.5 —Å–µ–∫—É–Ω–¥—ã
                Thread.sleep(1500);
                System.out.println("\nüêî –ö–£–†–ò–¶–ê: –Ø –ø–æ—è–≤–∏–ª–∞—Å—å –ø–µ—Ä–≤–æ–π!");

                // –ö—É—Ä–∏—Ü–∞ –≥–æ–≤–æ—Ä–∏—Ç –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ 0.5 —Å–µ–∫—É–Ω–¥—ã
                Thread.sleep(500);
                System.out.println("üêî –ö–£–†–ò–¶–ê: –ë–µ–∑ –º–µ–Ω—è –Ω–µ –±—ã–ª–æ –±—ã —è–∏—Ü!");

            } catch (InterruptedException e) {
                System.out.println("–ö—É—Ä–∏—Ü–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞!");
            }
        }
    }

    /**
     * –ó–∞–¥–∞—á–∞ –¥–ª—è –ø–æ—Ç–æ–∫–∞ "–Ø–π—Ü–æ"
     */
    static class EggTask implements Runnable {
        public void run() {
            try {
                // –Ø–π—Ü–æ "–¥—É–º–∞–µ—Ç" 1 —Å–µ–∫—É–Ω–¥—É
                Thread.sleep(1000);
                System.out.println("\nü•ö –Ø–ô–¶–û: –Ø –ø–æ—è–≤–∏–ª–æ—Å—å –ø–µ—Ä–≤—ã–º!");

                // –Ø–π—Ü–æ –≥–æ–≤–æ—Ä–∏—Ç –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                Thread.sleep(1000);
                System.out.println("ü•ö –Ø–ô–¶–û: –ë–µ–∑ –º–µ–Ω—è –Ω–µ –±—ã–ª–æ –±—ã –∫—É—Ä!");

            } catch (InterruptedException e) {
                System.out.println("–Ø–π—Ü–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ!");
            }
        }
    }

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è —Å–ø–æ—Ä–∞
     */
    public static void determineWinner() {
        System.out.println("\n=== –†–ï–ó–£–õ–¨–¢–ê–¢ –°–ü–û–†–ê ===");
        System.out.println("–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–ª–æ–≤–æ –æ—Å—Ç–∞–ª–æ—Å—å –∑–∞...");

        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –ª–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è,
        // –Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –≤—ã–±–µ—Ä–µ–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        if (Math.random() > 0.5) {
            System.out.println("üèÜ –ü–û–ë–ï–î–ò–õ–ê –ö–£–†–ò–¶–ê!");
            System.out.println("–í—ã–≤–æ–¥: –°–Ω–∞—á–∞–ª–∞ –ø–æ—è–≤–∏–ª–∞—Å—å –∫—É—Ä–∏—Ü–∞!");
        } else {
            System.out.println("üèÜ –ü–û–ë–ï–î–ò–õ–û –Ø–ô–¶–û!");
            System.out.println("–í—ã–≤–æ–¥: –°–Ω–∞—á–∞–ª–∞ –ø–æ—è–≤–∏–ª–æ—Å—å —è–π—Ü–æ!");
        }
    }
}
